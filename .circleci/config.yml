version: 2
jobs:
    test:
        docker:
            - image: circleci/python:3.7.2
              environment:
                # Both TEST_DATABASE_HOST and TEST_DATABASE_PORT must be defined.
                # Things will break if host is defined and port isn't or vice-versa.
                TEST_DATABASE_HOST: localhost
                TEST_DATABASE_PORT: 27017
                TOKEN_URL: http://localhost:12345
                TOKEN_KEY: lkjlksdldkfjlsdjflsdnfkl
                TOKEN_ALGORITHM: HS512
                PYTEST_ADDOPTS: tests/
            - image: circleci/mongo:3.7.9-ram
            - image: wipac/token-service:latest
              environment:
                port: 12345
                auth_secret: lkjlksdldkfjlsdjflsdnfkl
              command: [python, test_server.py]
        steps:
            - checkout
            - run: ./setupenv.sh
            - run: |
                . env/bin/activate &&
                resources/enable_profiling.py &&
                pytest -vvvvv --tb=short &&
                resources/profile_queries.py
    test_deploy:
        docker:
            - image: circleci/buildpack-deps:stretch
              environment:
                IMAGE_NAME: icecube/file-catalog
        steps:
            - checkout
            - setup_remote_docker
            - run: |
                echo 'export TAG="${CIRCLE_TAG:=latest}"' >> $BASH_ENV
            - run: |
                docker build -t $IMAGE_NAME:$TAG .
    deploy:
        docker:
            - image: circleci/buildpack-deps:stretch
              environment:
                IMAGE_NAME: icecube/file-catalog
        steps:
            - checkout
            - setup_remote_docker
            - run: |
                echo 'export TAG="${CIRCLE_TAG:=latest}"' >> $BASH_ENV
            - run: |
                docker build -t $IMAGE_NAME:$TAG .
            - run: |
                echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
                docker push $IMAGE_NAME:$TAG
workflows:
    version: 2
    build_and_test:
        jobs:
            - test
            - test_deploy:
                context: docker
                filters:
                    branches:
                        ignore: master
            - deploy:
                context: docker
                filters:
                    branches:
                        only: master
    release:
        jobs:
            - deploy:
                context: docker
                filters:
                    branches:
                        ignore: /.*/
                    tags:
                        only: /^v?\d+\.\d+\.\d+$/
